// workout.js ‚Äî —É–ø—Ä–æ—â—ë–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–µ–∑ –º–æ–¥–∞–ª–æ–∫

// ====== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ======
const exerciseList = [
    // üèãÔ∏è‚Äç‚ôÇÔ∏è –ù–æ–≥–∏
    { id: 'squat', name: '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è —Å–æ —à—Ç–∞–Ω–≥–æ–π' },
    { id: 'front_squat', name: '–§—Ä–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è' },
    { id: 'leg_press', name: '–ñ–∏–º –Ω–æ–≥–∞–º–∏ –≤ —Ç—Ä–µ–Ω–∞–∂—ë—Ä–µ' },
    { id: 'lunge', name: '–í—ã–ø–∞–¥—ã' },
    { id: 'step_up', name: '–ü–æ–¥—ä—ë–º—ã –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É' },
    { id: 'leg_extension', name: '–†–∞–∑–≥–∏–±–∞–Ω–∏—è –Ω–æ–≥ –≤ —Ç—Ä–µ–Ω–∞–∂—ë—Ä–µ' },
    { id: 'leg_curl', name: '–°–≥–∏–±–∞–Ω–∏—è –Ω–æ–≥ –≤ —Ç—Ä–µ–Ω–∞–∂—ë—Ä–µ' },
    { id: 'calf_raise', name: '–ü–æ–¥—ä—ë–º—ã –Ω–∞ –Ω–æ—Å–∫–∏ —Å—Ç–æ—è' },
    { id: 'seated_calf_raise', name: '–ü–æ–¥—ä—ë–º—ã –Ω–∞ –Ω–æ—Å–∫–∏ —Å–∏–¥—è' },

    // üèãÔ∏è‚Äç‚ôÇÔ∏è –°–ø–∏–Ω–∞
    { id: 'deadlift', name: '–°—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞' },
    { id: 'sumo_deadlift', name: '–°—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞ —Å—É–º–æ' },
    { id: 'romanian_deadlift', name: '–†—É–º—ã–Ω—Å–∫–∞—è —Ç—è–≥–∞' },
    { id: 'pullup', name: '–ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è' },
    { id: 'chinup', name: '–ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è –æ–±—Ä–∞—Ç–Ω—ã–º —Ö–≤–∞—Ç–æ–º' },
    { id: 'lat_pulldown', name: '–¢—è–≥–∞ –≤–µ—Ä—Ö–Ω–µ–≥–æ –±–ª–æ–∫–∞' },
    { id: 'seated_row', name: '–¢—è–≥–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –±–ª–æ–∫–∞' },
    { id: 'barbell_row', name: '–¢—è–≥–∞ —à—Ç–∞–Ω–≥–∏ –≤ –Ω–∞–∫–ª–æ–Ω–µ' },
    { id: 'dumbbell_row', name: '–¢—è–≥–∞ –≥–∞–Ω—Ç–µ–ª–∏ –≤ –Ω–∞–∫–ª–æ–Ω–µ' },
    { id: 'face_pull', name: '–¢—è–≥–∞ –∫–∞–Ω–∞—Ç–∞ –∫ –ª–∏—Ü—É' },

    // üèãÔ∏è‚Äç‚ôÇÔ∏è –ì—Ä—É–¥—å
    { id: 'bench_press', name: '–ñ–∏–º –ª—ë–∂–∞ —Å–æ —à—Ç–∞–Ω–≥–æ–π' },
    { id: 'incline_bench_press', name: '–ñ–∏–º –Ω–∞ –Ω–∞–∫–ª–æ–Ω–Ω–æ–π —Å–∫–∞–º—å–µ' },
    { id: 'decline_bench_press', name: '–ñ–∏–º –Ω–∞ —Å–∫–∞–º—å–µ —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –Ω–∞–∫–ª–æ–Ω–æ–º' },
    { id: 'dumbbell_press', name: '–ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π –ª—ë–∂–∞' },
    { id: 'dumbbell_fly', name: '–†–∞–∑–≤–æ–¥–∫–∞ –≥–∞–Ω—Ç–µ–ª–µ–π –ª—ë–∂–∞' },
    { id: 'pushup', name: '–û—Ç–∂–∏–º–∞–Ω–∏—è' },
    { id: 'chest_dips', name: '–û—Ç–∂–∏–º–∞–Ω–∏—è –Ω–∞ –±—Ä—É—Å—å—è—Ö' },
    { id: 'pec_deck', name: '–°–≤–µ–¥–µ–Ω–∏–µ —Ä—É–∫ –≤ —Ç—Ä–µ–Ω–∞–∂—ë—Ä–µ' },

    // üèãÔ∏è‚Äç‚ôÇÔ∏è –ü–ª–µ—á–∏
    { id: 'overhead_press', name: '–ñ–∏–º —à—Ç–∞–Ω–≥–∏ —Å—Ç–æ—è' },
    { id: 'seated_overhead_press', name: '–ñ–∏–º —à—Ç–∞–Ω–≥–∏ —Å–∏–¥—è' },
    { id: 'arnold_press', name: '–ñ–∏–º –ê—Ä–Ω–æ–ª—å–¥–∞' },
    { id: 'lateral_raise', name: '–ü–æ–¥—ä—ë–º –≥–∞–Ω—Ç–µ–ª–µ–π –≤ —Å—Ç–æ—Ä–æ–Ω—ã' },
    { id: 'front_raise', name: '–ü–æ–¥—ä—ë–º –≥–∞–Ω—Ç–µ–ª–µ–π –≤–ø–µ—Ä—ë–¥' },
    { id: 'rear_delt_fly', name: '–†–∞–∑–≤–æ–¥–∫–∞ –≥–∞–Ω—Ç–µ–ª–µ–π –≤ –Ω–∞–∫–ª–æ–Ω–µ' },
    { id: 'upright_row', name: '–¢—è–≥–∞ —à—Ç–∞–Ω–≥–∏ –∫ –ø–æ–¥–±–æ—Ä–æ–¥–∫—É' },
    
    // üèãÔ∏è‚Äç‚ôÇÔ∏è –†—É–∫–∏ ‚Äî –±–∏—Ü–µ–ø—Å
    { id: 'barbell_curl', name: '–ü–æ–¥—ä—ë–º —à—Ç–∞–Ω–≥–∏ –Ω–∞ –±–∏—Ü–µ–ø—Å' },
    { id: 'dumbbell_curl', name: '–ü–æ–¥—ä—ë–º –≥–∞–Ω—Ç–µ–ª–µ–π –Ω–∞ –±–∏—Ü–µ–ø—Å' },
    { id: 'hammer_curl', name: '–ü–æ–¥—ä—ë–º –≥–∞–Ω—Ç–µ–ª–µ–π –º–æ–ª–æ—Ç–∫–æ–º' },
    { id: 'preacher_curl', name: '–°–≥–∏–±–∞–Ω–∏—è –Ω–∞ —Å–∫–∞–º—å–µ –°–∫–æ—Ç—Ç–∞' },
    { id: 'cable_curl', name: '–°–≥–∏–±–∞–Ω–∏—è –Ω–∞ –±–ª–æ–∫–µ' },

    // üèãÔ∏è‚Äç‚ôÇÔ∏è –†—É–∫–∏ ‚Äî —Ç—Ä–∏—Ü–µ–ø—Å
    { id: 'triceps_pushdown', name: '–†–∞–∑–≥–∏–±–∞–Ω–∏—è –Ω–∞ –±–ª–æ–∫–µ' },
    { id: 'overhead_triceps_extension', name: '–†–∞–∑–≥–∏–±–∞–Ω–∏—è –∏–∑-–∑–∞ –≥–æ–ª–æ–≤—ã' },
    { id: 'close_grip_bench_press', name: '–ñ–∏–º —É–∑–∫–∏–º —Ö–≤–∞—Ç–æ–º' },
    { id: 'bench_dips', name: '–û—Ç–∂–∏–º–∞–Ω–∏—è –æ—Ç —Å–∫–∞–º—å–∏' },
    { id: 'skullcrusher', name: '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π –∂–∏–º' },

    // üèãÔ∏è‚Äç‚ôÇÔ∏è –ü—Ä–µ—Å—Å
    { id: 'crunch', name: '–°–∫—Ä—É—á–∏–≤–∞–Ω–∏—è' },
    { id: 'reverse_crunch', name: '–û–±—Ä–∞—Ç–Ω—ã–µ —Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è' },
    { id: 'leg_raise', name: '–ü–æ–¥—ä—ë–º –Ω–æ–≥ –≤ –≤–∏—Å–µ' },
    { id: 'plank', name: '–ü–ª–∞–Ω–∫–∞' },
    { id: 'side_plank', name: '–ë–æ–∫–æ–≤–∞—è –ø–ª–∞–Ω–∫–∞' },
    { id: 'ab_rollout', name: '–í—ã–∫–∞—Ç—ã —Å –∫–æ–ª—ë—Å–∏–∫–æ–º' }
];

let workoutData = []; // —Ç–µ–∫—É—â–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞

// ====== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ======
document.addEventListener('DOMContentLoaded', () => {
    initSelectors();
    initEvents();
    loadDraft();
});

// ====== –†–µ–Ω–¥–µ—Ä —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ ======
function initSelectors() {
    const exerciseSelect = document.getElementById('exerciseSelect');
    const weightSelect = document.getElementById('weightSelect');
    const repsSelect = document.getElementById('repsSelect');

    // –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
    exerciseList.forEach(ex => {
        const opt = document.createElement('option');
        opt.value = ex.id;
        opt.textContent = ex.name;
        exerciseSelect.appendChild(opt);
    });

    // –í–µ—Å–∞
    for (let w = 0.5; w <= 200; w += (w < 20 ? 0.5 : 2.5)) {
        const opt = document.createElement('option');
        opt.value = w;
        opt.textContent = `${w} –∫–≥`;
        weightSelect.appendChild(opt);
    }

    // –ü–æ–≤—Ç–æ—Ä—ã
    [5, 8, 10, 12, 15, 20].forEach(r => {
        const opt = document.createElement('option');
        opt.value = r;
        opt.textContent = `${r}`;
        repsSelect.appendChild(opt);
    });
}

// ====== –°–æ–±—ã—Ç–∏—è ======
function initEvents() {
    document.getElementById('addSetBtn').addEventListener('click', () => {
        const exercise = document.getElementById('exerciseSelect').value;
        const weight = document.getElementById('weightSelect').value;
        const reps = document.getElementById('repsSelect').value;

        if (!exercise || !weight || !reps) {
            alert('–ó–∞–ø–æ–ª–Ω–∏ –≤—Å–µ –ø–æ–ª—è');
            return;
        }

        addSet(exercise, weight, reps);
        saveDraft();
        renderWorkout();
    });

    document.getElementById('saveWorkoutBtn')?.addEventListener('click', () => {
        saveWorkout();
    });
}

// ====== –õ–æ–≥–∏–∫–∞ ======
function addSet(exerciseId, weight, reps) {
    const exerciseName = exerciseList.find(e => e.id === exerciseId)?.name || exerciseId;
    workoutData.push({
        exercise: exerciseName,
        weight: parseFloat(weight),
        reps: parseInt(reps),
        time: Date.now()
    });
}

function renderWorkout() {
    const container = document.getElementById('workoutList');
    container.innerHTML = '';

    workoutData.forEach((set, index) => {
        const div = document.createElement('div');
        div.className = 'workout-set';
        div.textContent = `${set.exercise} ‚Äî ${set.weight} –∫–≥ √ó ${set.reps} –ø–æ–≤—Ç–æ—Ä–æ–≤`;
        
        const delBtn = document.createElement('button');
        delBtn.textContent = '‚úï';
        delBtn.addEventListener('click', () => {
            workoutData.splice(index, 1);
            saveDraft();
            renderWorkout();
        });

        div.appendChild(delBtn);
        container.appendChild(div);
    });
}

// ====== –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ / –ó–∞–≥—Ä—É–∑–∫–∞ ======
function saveDraft() {
    try {
        localStorage.setItem('workoutDraft', JSON.stringify(workoutData));
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞', e);
    }
}

function loadDraft() {
    try {
        const draft = localStorage.getItem('workoutDraft');
        if (draft) {
            workoutData = JSON.parse(draft);
            renderWorkout();
        }
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∞', e);
    }
}

function saveWorkout() {
    // –ï—Å–ª–∏ –µ—Å—Ç—å Telegram WebApp API
    if (window.Telegram?.WebApp?.CloudStorage) {
        Telegram.WebApp.CloudStorage.setItem('workoutHistory', JSON.stringify(workoutData), (err, ok) => {
            if (ok) {
                alert('–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –æ–±–ª–∞–∫–µ!');
                workoutData = [];
                saveDraft();
                renderWorkout();
            } else {
                alert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –æ–±–ª–∞–∫–æ');
            }
        });
    } else {
        alert('–û–±–ª–∞–∫–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ');
        localStorage.setItem('workoutHistory', JSON.stringify(workoutData));
        workoutData = [];
        saveDraft();
        renderWorkout();
    }
}
